apiVersion: batch/v1
kind: Job
metadata:
  name: inject-secrets
  annotations:
    "argocd.argoproj.io/hook": PreSync
spec:
  template:
    spec:
      containers:
        - name: inject-secrets
          image: express42/helm-kubectl-git-yq-jq:v3.11.3-v1.23.17-git-v4.40.5-v1.7.1
          command: ["/bin/bash", "-c"]
          args:
            - |
              kubectl get configmap default-values-cm -n argocd -o yaml > /tmp/base-values.yaml

              for CLUSTER_NAME in $(kubectl get managedclusters -o jsonpath='{.items[*].metadata.name}'); do
                echo "Processing Cluster: $CLUSTER_NAME"
                
                SECRET_NAME="device-secret-$CLUSTER_NAME"
                if [[ "$CLUSTER_NAME" == *"ts"* ]]; then
                  HARDWARE_MODEL="v2"
                  HOST_PATH="/image_stream_temp_data"
                  HOST_OUTPUT_PATH="/data_gathering"
                else
                  HARDWARE_MODEL="v1"
                  HOST_PATH="/media/ssd/image_stream_temp_data"
                  HOST_OUTPUT_PATH="/media/ssd/data_gathering"
                fi

                RABBITMQ_USERNAME=$(kubectl get secret shared-external-secret -n argocd -o jsonpath='{.data.rabbitmq-username}' | base64 --decode)
                RABBITMQ_PASSWORD=$(kubectl get secret shared-external-secret -n argocd -o jsonpath='{.data.rabbitmq-password}' | base64 --decode)
                RABBITMQ_ERLANG_COOKIE=$(kubectl get secret shared-external-secret -n argocd -o jsonpath='{.data.rabbitmq-erlangCookie}' | base64 --decode)
                kubectl get secret shared-external-secret -n argocd -o jsonpath='{.data.rootCA}' | base64 --decode > /tmp/rootCA-$CLUSTER_NAME.pem

                TMS_ID=$(kubectl get secret $SECRET_NAME -n argocd -o jsonpath='{.data.tmsID}' | base64 --decode)
                kubectl get secret $SECRET_NAME -n argocd -o jsonpath='{.data.thingCert}' | base64 --decode > /tmp/thingCert-$CLUSTER_NAME.pem
                kubectl get secret $SECRET_NAME -n argocd -o jsonpath='{.data.privateKey}' | base64 --decode > /tmp/privateKey-$CLUSTER_NAME.pem
                THING_NAME=$(kubectl get managedcluster $CLUSTER_NAME -o jsonpath='{.metadata.labels.tms-device}')

                echo "Decoded RabbitMQ Username: $RABBITMQ_USERNAME"
                echo "Decoded RabbitMQ Password: $RABBITMQ_PASSWORD"
                echo "Decoded Erlang Cookie: $RABBITMQ_ERLANG_COOKIE"
                echo "Decoded TMS ID: $TMS_ID"
                echo "Thing Cert: $(cat /tmp/thingCert-$CLUSTER_NAME.pem)"
                echo "Private Key: $(cat /tmp/privateKey-$CLUSTER_NAME.pem)"
                echo "Root CA: $(cat /tmp/rootCA-$CLUSTER_NAME.pem)"

                yq eval ".data[\"values.yaml\"] |= sub(\"hardwareModel:.*\", \"hardwareModel: $HARDWARE_MODEL\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"hostPath:.*\", \"hostPath: $HOST_PATH\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"hostOutputPath:.*\", \"hostOutputPath: $HOST_OUTPUT_PATH\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"username:.*\", \"username: $RABBITMQ_USERNAME\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"password:.*\", \"password: $RABBITMQ_PASSWORD\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"erlangCookie:.*\", \"erlangCookie: $RABBITMQ_ERLANG_COOKIE\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"tmsID:.*\", \"tmsID: $TMS_ID\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"thingName:.*\", \"thingName: $THING_NAME\")" -i /tmp/base-values.yaml

                yq eval ".data[\"values.yaml\"] |= sub(\"rootCA:.*\", \"rootCA: |\\n$(sed 's/^/      /' /tmp/rootCA-$CLUSTER_NAME.pem)\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"thingCert:.*\", \"thingCert: |\\n$(sed 's/^/      /' /tmp/thingCert-$CLUSTER_NAME.pem)\")" -i /tmp/base-values.yaml
                yq eval ".data[\"values.yaml\"] |= sub(\"privateKey:.*\", \"privateKey: |\\n$(sed 's/^/      /' /tmp/privateKey-$CLUSTER_NAME.pem)\")" -i /tmp/base-values.yaml

                CLUSTER_SPECIFIC_CONFIGMAP="tms-app-values-$CLUSTER_NAME"
                yq eval ".metadata.name = \"$CLUSTER_SPECIFIC_CONFIGMAP\"" -i /tmp/base-values.yaml

                kubectl apply -f /tmp/base-values.yaml
              done
      restartPolicy: Never